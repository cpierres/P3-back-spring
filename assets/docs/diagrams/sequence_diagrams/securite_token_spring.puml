@startuml
actor Utilisateur

participant AuthController <<RestController>>
participant JwtService <<Component>>
participant UserRepository <<JpaRepository>>
participant securityFilterChain <<SecurityFilterChain>>
participant jwtDecoder <<JwtDecoder>>
participant Authentication <<SecurityContext>>
participant AnyController <<RestController>>

Utilisateur -> AuthController: POST /login (loginRequest)
AuthController -> JwtService: login(loginRequest)
JwtService -> UserRepository: Récupérer l'utilisateur et valider le mot de passe
UserRepository --> JwtService: L'utilisateur est valide
JwtService -> JwtService: Générer le JWT
JwtService --> AuthController: JWT
AuthController --> Utilisateur: JWT

Utilisateur -> securityFilterChain: GET /endpoint-securisé (avec le token Bearer)
note over of securityFilterChain
    Bean géré par Spring
    (défini dans configuration
    de Spring Security)
end note

securityFilterChain -> jwtDecoder: Valider la signature du token et les claims (email, id)
note over of jwtDecoder
    Bean géré par Spring
    (défini dans configuration
    de Spring Security)
end note
jwtDecoder --> securityFilterChain: Le token est valide
securityFilterChain -> Authentication: Définir l'objet Authentication
securityFilterChain -> AnyController: Continuer vers l'exécution du contrôleur
AnyController --> Utilisateur: Réponse (données, 200)

@enduml