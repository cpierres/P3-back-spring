@startuml
actor ClientAngular
participant JwtInterceptor <<HttpInterceptor>>
participant Server

ClientAngular -> Server: Demande d'authentification
Server --> ClientAngular: Génère un JWT signé (HS256) \net le renvoie
note over ClientAngular
    Stockage du JWT (localStorage)
end note

ClientAngular -> JwtInterceptor: Prépare une nouvelle requête HTTP
note over of JwtInterceptor
    JwtInterceptor implémente HttpInterceptor
end note
JwtInterceptor -> JwtInterceptor: Ajout du header\nAuthorization Bearer <JWT>

JwtInterceptor -> Server: Envoie la requête avec le token

Server -> Server: Décodage et validation du JWT
note right of Server
    - Signature correcte ?
    - Token expiré ?
    - Permissions ?
end note

alt Token valide
    Server --> ClientAngular: Accès à la ressource autorisé
else Token invalide ou expiré
    Server --> ClientAngular: 401 Unauthorized
end

box Frontend #LightBlue
  participant ClientAngular
  participant JwtInterceptor
end box
box Backend #LightGreen
  participant Server
end box
@enduml